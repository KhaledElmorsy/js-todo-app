{"version":3,"file":"main.js","mappings":"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ACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;;;;;;;;;;;;ACCA;AACA;AAEA,IAAM0E,GAAG,GAAG,IAAI3D,mDAAJ,EAAZ,C","sources":["webpack://js-todolist/./node_modules/css-loader/dist/runtime/api.js","webpack://js-todolist/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://js-todolist/./src/controller.js","webpack://js-todolist/./src/model.js","webpack://js-todolist/./src/templates/checklist.js","webpack://js-todolist/./src/templates/helpers.js","webpack://js-todolist/./src/templates/index.js","webpack://js-todolist/./src/templates/project.js","webpack://js-todolist/./src/templates/projectList.js","webpack://js-todolist/./src/templates/todo.js","webpack://js-todolist/./src/view.js","webpack://js-todolist/./src/assets/style.css","webpack://js-todolist/./src/assets/style.css?601d","webpack://js-todolist/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://js-todolist/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://js-todolist/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://js-todolist/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://js-todolist/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://js-todolist/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://js-todolist/webpack/bootstrap","webpack://js-todolist/webpack/runtime/compat get default export","webpack://js-todolist/webpack/runtime/define property getters","webpack://js-todolist/webpack/runtime/hasOwnProperty shorthand","webpack://js-todolist/webpack/runtime/make namespace object","webpack://js-todolist/webpack/runtime/nonce","webpack://js-todolist/./src/index.js"],"sourcesContent":["\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","import { ChecklistItem, Todo, Project, ProjectList} from './model'\nimport { PopulatorView, TodoView, NewAppView } from './view'\n/** @typedef {import('./model').DataModel} DataModel */\n\n/**\n * Controllers handle manipulating models, creating and controlling views, and handling events.\n * @namespace Controllers\n */\n\n/** \n * Main app instance\n * @type {ProjectList} \n * @memberof Controllers\n */\nconst instance = new ProjectList()\n\n/**\n * Helper functions to facilitate some repetitive tasks:\n * @namespace Controllers.ControllerHelpers\n */\n\n/**\n * Selects certain elements in a specific parent element and adds listeners to each.\n * @memberof Controllers.ControllerHelpers\n * @param {Object} context - Controller instance to bind callbacks to since they're class methods\n * @param {HTMLElement} parent - DOM node to select from\n * @param {string} selector - Selector of elements to add listeners to\n * @param {string} event - Event type to listen for i.e. 'click'\n * @param {function(event)} callback - Function to run when event is triggered\n */\nfunction setListeners(context, parent, selector, event, callback) {\n    const elements = parent.querySelectorAll(selector)\n    if (!elements) return\n    for (let el of elements) el.addEventListener(event, callback.bind(context))\n}\n\n/**\n * Gets model object's ID from event target's data attribute for callbacks that\n * take ID as input.\n * @memberof Controllers.ControllerHelpers\n * @param {Event} event - Event object with target HTML element data \n * @returns {number} - ID of model object linked to event target\n */\nfunction getID(event) {\n    const itemContainerEl = event.composedPath().find(el => el.hasAttribute('data-child-id'))\n    return parseInt(itemContainerEl.getAttribute('data-child-id'))\n}\n\n/**\n * Parent abstract class for Controllers which update the model and re-render view.\n * They also assigns event listeners to relevant view elements.\n * Subclasses are hierarchical like models & views: Project List > Project > .\n * \n * {@link Controller View}\n * @memberof Controllers~\n */\nclass Controller {\n    /**\n     * @param {DataModel} model Source model to be editied\n     */\n    constructor(model) {\n        // Ensure class is abstract\n        if (this.constructor === Controller) throw new Error('Abstract Class')\n        /** \n         * @type {DataModel}\n         */\n        this.model = model;\n    }\n\n    /** Save overall app model to local storage */\n    save() {\n        localStorage.projectList = JSON.stringify(instance.list)\n    }\n\n    /**\n     * Update procedure after model manipulations that affect view elements.\n     * 1. Save Project List instance in local storage \n     * 2. Re-render view elements \n     * 3. Set relevant event listeners\n     */\n    update() {\n        this.save();\n        this.view.render();\n        this.listeners();\n    }\n\n    // Abstract methods extepcted of each controller\n    /** Edit model/child data */\n    edit() { }\n    /** Set event listeners to elements rendered by the view */\n    listeners() { }\n    /** Remove relevant model by setting visibility to false */\n    remove() { }\n    /** Toggle the 'done' status of the source/child model and update the relevant DOM element classes*/\n    toggle() { }\n}\n\n/** Parent controller for rendering and manipulating a list of child objects in parent models.\n * i.e. Rendering each Todo in an array of Todos in a parent Project model.\n * \n * {@link ListController View}\n * @memberof Controllers~\n * @extends Controller\n * @extends Controllers~Controller\n */\nclass ListController extends Controller {\n    /**\n     * \n     * @param {DataModel} parent Source parent model. Must contain an array called 'list' containing derived data model types\n     * @param {string} type Type of parent model, i.e 'ProjectList', 'Project', 'Todo'. Values according to the keys {@link Views~containers here}\n     */\n    constructor(parent, type) {\n        super(parent);\n        /**\n         * List of child objects\n         * @type {DataModel[]}\n         */\n        this.list = this.model.list\n        /**\n         * A populator view created with the parent model\n         * @type {PopulatorView}\n         */\n        this.view = new PopulatorView(this.model, type)\n    }\n\n    /** Add child model */\n    add() { }\n\n    /**\n      * 'Deletes' child object by hiding it then runs update() above. View renderer \n      * ignores objects with visislbe = false. This design decision is explained \n      * at the Model class.\n      * @param {number} id - child objects id, AKA it's index\n      */\n    remove(id) {\n        this.list[id].visible = false;\n        this.update();\n    }\n\n    /**\n      * Toggle the status (done or not) of a model or child and add/remove a \n      * 'done' class to the relevant view element\n      * @param {number} id ID/index of the model/child to toggle\n      */\n    toggle(id) {\n        // Edit Model\n        this.list[id].status = !this.list[id].status\n        // Add/remove class in view depending on new status.\n        const removeClass = this.list[id].status ? false : true; // Status: flase >> child isn't done >> Remove 'done' = true.\n        this.view.setClass(id, 'done', removeClass)\n    }\n\n    /**\n      * Filters list of child objects and only keep ones where visible = true.\n      * @returns {Array} - Array of child objects\n      */\n    getVisible() {\n        return this.list.filter(child => child.visible)\n    }\n}\n\n/**\n * Controller for checklists, which are an array in each Todo containing checklist items.\n * The parent Todo which contains the list, is the source model since rendering and data manipulation \n * the whole list.\n * \n * {@link ChecklistController View}\n * @memberof Controllers\n * @extends ListController\n * @extends Controllers~ListController\n */\nclass ChecklistController extends ListController {\n    /**\n     * \n     * @param {Todo} todo Parent todo\n     */\n    constructor(todo) {\n        super(todo, 'Checklist');\n        super.update();\n    }\n\n    /**\n     * Edit a checklist item live by updating the model with each input\n     * @param {InputEvent} event User input in the field\n     */\n    edit(event) {  // Pass Event as input to cleanly get and use event target's value\n        const itemID = getID(event); // Instead of using getID then edit(id) in the callback\n        const inputValue = event.target.value;\n        if (inputValue) { // If field isn't empty, update item's model\n            this.list[itemID].descr = inputValue;\n            super.save();\n        }\n        else { // If field is empty, remove item, and update (save and re-render) \n            super.remove(itemID)\n            this.update();\n            console.log(this.view.addForm)\n            this.view.addForm['descr'].focus(); // Focus add form's input if user still wants to enter an item\n        }\n    }\n\n    /** Add a new checklist item to the model when the user makes an input in the add form */\n    add() {\n        const form = this.view.addForm\n        const id = this.list.length\n        this.list.push(new ChecklistItem(id, form['descr'].value))\n        this.update();\n\n        // Focus newly created input and put cursos at the end by resetting the value (kinda hacky)\n        const checklistElement = this.view.container.querySelector(`[data-child-id=\"${id}\"] input`)\n        const tempDescr = checklistElement.value;\n        checklistElement.focus();\n        checklistElement.value = '';\n        checklistElement.value = tempDescr;\n    }\n\n    /** Set relevant listeners to each checklist item */\n    listeners() {\n        const container = this.view.container\n        setListeners(this, container, '.checklist-item', 'input', this.edit)\n        setListeners(this, container, '#new-checklist-item', 'input', this.add)\n        setListeners(this, container, '.delete', 'click', (e) => this.remove(getID(e)))\n        setListeners(this, container, '.done-toggle', 'click', (e) => super.toggle(getID(e)))\n    }\n}\n\n/** \n * Controller for the detailed Todo View modal. Automatically renders modal when instanced\n * \n * {@link TodoController View}\n * @memberof Controllers\n * @extends Controller\n * @extends Controllers~Controller\n */\nclass TodoController extends Controller {\n    /**\n     * @param {classes['Todo']} todo Source Todo model\n     */\n    constructor(todo) {\n        super(todo);\n        /**\n         * @type {TodoView}\n         */\n        this.view = new TodoView(todo);\n\n        this.update(); // Render and set listeners\n\n        /**\n         * The modal body. An form element with fields for each model property, pre-filled with \n         * their original values. User inputs updated the model {@link edit see here}\n         * @type {HTMLFormElement}\n         */\n        this.form = this.view.form;\n\n        /**\n         * Checklist controller that handles rendering and updating the array of \n         * child checklist item objects\n         * @type {ChecklistController}\n         */\n        this.checklist = new ChecklistController(todo)\n    }\n\n    /** Hide the modal and re-render project view */\n    close() {\n        this.view.hide();\n        this.projectController.update();\n    }\n\n    /** Close modal if the user clicks outside by submitting it, hence running {@link close} */\n    clickOut(event) {\n        if (event.target === event.currentTarget)\n            this.view.form.elements['save'].click(); // submit() doesn't trigger listener\n    }\n\n    /** Edit the model live by updating it when a user makes in an input in field */\n    edit(event) {\n        const input = event.target\n        const modelProperty = input.name // Field names match model property names\n        this.model[modelProperty] = input.value\n        this.save() // Save to local storage\n    }\n\n    /** Set Todo's visibility to false and close the modal element (refreshing the project view) */\n    remove() {\n        this.model.visible = false;\n        this.close();\n    }\n\n    /** Toggle the status of the Todo element and toggle the 'done' class on the modal */\n    toggle() {\n        this.model.status = !this.model.status;\n\n        const removeClass = this.model.status ? false : true;\n        this.view.setClass('done', removeClass)\n    }\n\n    /** Set relevant listeners to modal elements, the form, and the background */\n    listeners() {\n        setListeners(this, this.view.form, 'input,textarea', 'input', this.edit)\n        setListeners(this, this.view.container, '#todo-background', 'click', this.clickOut)\n        setListeners(this, this.view.form, '.delete', 'click', this.remove)\n        setListeners(this, this.view.form, '.done-toggle', 'click', this.toggle)\n        this.view.form.addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.close()\n        })\n    }\n}\n\n/**\n * Controller that manages Project models and views. Projects are essentially \n * parent containers of Todo elements, so the controller handles the array of todos.\n * \n * @extends ListController\n * @extends Controllers~ListController\n * @memberof Controllers\n */\nclass ProjectController extends ListController {\n    /**\n     * @param {Project} project Source projet model\n     */\n    constructor(project) {\n        super(project, 'Project');\n        super.update();\n    }\n\n    /** Add todo element to project based on form input values */\n    add(event) {\n        event.preventDefault();\n\n        const inputs = event.target.elements // HTMLCollection: [title, desc, checklist1, checklist2, checklist3]\n        const inputValues = [...inputs].map(element => element.value) // Convert to array of values\n        const [title, descr, ...checklist] = inputValues\n\n        const list = checklist.filter(itemDescr => itemDescr).map((itemDescr, i) =>\n            new ChecklistItem(i, itemDescr)) // id, descr\n\n        const [startDate, endDate] = [null, null]\n        const id = this.list.length\n\n        const todo = new Todo(id, title, descr, startDate, endDate, list)\n        this.list.push(todo)\n\n        super.update()\n    }\n\n    /** \n     * Replace the Todo card with a form containing the original values. \n     * Submitting the form then updates the model with the new values and updates the\n     *  view/listeners and local storage\n     */\n    edit(id) {\n        super.update() // Avoids multiple concurrent editing forms. Doesn't save changes.\n\n        this.view.editMode(id);\n        this.view.container.querySelector('.edit-form').addEventListener('submit', (event) => {\n            event.preventDefault();\n\n            const inputs = [...event.target.elements].filter(el => (el.tagName !== 'BUTTON')) //Filter out buttons\n            const inputValues = inputs.map(el => el.value)\n            const [newTitle, newDescr, ...newList] = inputValues\n\n            const todoModel = this.model.list[id] // Model instance being edited\n            todoModel.title = newTitle;\n            todoModel.descr = newDescr;\n\n            const renderedList = todoModel.list.filter(item => item.visible) // Only compare to visible items\n            newList.forEach((itemDescr, i) => {\n                if (!itemDescr && !renderedList[i]) return // Skip if field is empty and nothing was rendered\n\n                if (renderedList[i]) { // If an item was rendered:\n                    const itemID = renderedList[i].id // Get the actual index of the item in the model list\n\n                    if (!itemDescr) {\n                        todoModel.list[itemID].visible = false;     // If the relevant field is now empty, hide the item\n                    } else {\n                        todoModel.list[itemID].descr = itemDescr;   // Otherwise change its value\n                    }\n\n                } else { // If there's no rendered item, then add a new item\n                    const id = todoModel.list.length\n                    todoModel.list.push(new ChecklistItem(id, itemDescr));\n                }\n            })\n\n            super.update()\n        })\n    }\n\n    /** Select a Todo item and load it into a {@link TodoController} */\n    select(id) {\n        this.todoController = new TodoController(this.list[id])\n\n        /**\n         * Parent project controller\n         * @type {ProjectController}\n         */\n        this.todoController.projectController = this; // Add parent controller property to call update() after closing the modal.\n    }\n\n    /** Set listeners for all Todo cards child elements in the project view container and the add form.  */\n    listeners() {\n        const container = this.view.container\n        this.view.addForm.addEventListener('submit', this.add.bind(this))\n        setListeners(this, container, '.delete', 'click', (e) => this.remove(getID(e)))\n        setListeners(this, container, '.done-toggle', 'click', (e) => super.toggle(getID(e)))\n        setListeners(this, container, '.card:not(#new-todo) :is(p,h2,h4,li)', 'dblclick', (e) => this.edit(getID(e)))\n        setListeners(this, container, '.card:not(#new-todo, button)', 'click', (e) => {\n            if (e.target === e.currentTarget)\n                this.select(getID(e))\n        })\n    }\n\n}\n\n/** Handles the overall app model instance, which is an array of project models */\nclass ProjectListController extends ListController {\n    constructor() {\n        super(instance, 'ProjectList');\n        super.update();\n\n        // Get enabled projects and select the first one by default \n        this.selectDefault();\n    }\n\n    /** Add project when 'add form' is submitted */\n    add(event) {\n        event.preventDefault();\n\n        const id = this.list.length;\n        const title = event.target.elements['name'].value;\n        this.model.list.push(new Project(id, title))\n\n        super.update();\n        this.select(id); // Switch to new project\n    }\n\n    /** Select a child project from the array given its ID by creating a project controller instance*/\n    select(id) {\n        const project = this.model.list[id]\n        /**\n         * Controller for the currently loaded project.\n         * @type {ProjectController}\n         */\n        this.projectController = new ProjectController(project); // New controller instance updates/renders its view\n\n        /**\n         * @type {classes['Project']} \n         */\n        this.previousProject = this.activetProject // Record last selected project incase active project is removed\n        \n        /**\n         * @type {classes['Project']}\n         */\n        this.activetProject = project\n\n        this.view.setClass(id, 'active', false, true); // Set relevant child view element to active\n    }\n\n    /** \n     * Default selection logic when loading the controller for the first time or when removing the current \n     * project and the previous proejct was already removed.\n     */\n    selectDefault() {\n        const visibleProjects = super.getVisible();\n\n        if (visibleProjects.length) {\n            this.select(visibleProjects[0].id);\n        } else {\n            this.emptyView = new NewAppView(); // Create a view in the Project View\n                                             // container asking the user to create a new porject\n        }\n    }\n\n    /** \n     * Remove a child project object. Since a project should always be selected, \n     * this handles the selection logic incase the active project is deleted.\n     */\n    remove(id) {\n        super.remove(id) // Remove project model from project list's array and update the sidebar.\n\n        // Rendering the sidebar doesn't show the selected project, so we reselect it.\n        // Also, we might have removed the currently selected project so we'd need\n        // to select a different one.\n        if (id === this.activetProject.id) { // If we removed the active project\n            if (this.previousProject?.visible)        // Check if the previous project is visible\n                this.select(this.previousProject.id) // And select it (feels better than just selecting the first project)\n            else\n                this.selectDefault() // Or select the first visible project if it isn't visible\n        } else {\n            this.select(this.activetProject.id)  // Reselect the active project if it wasn't the one removed\n        }\n    }\n\n    /** \n     * Replace the project container with an pre-filled form that the user can edit.\n     * The model value is updated with each input to make editing feel more seamless.\n     */\n    edit(id) {\n        super.update() // Avoids multiple concurrent editing forms. Doesn't save changes.\n\n        this.view.editMode(id); // Replace field with pre-filled edit form using the model\n\n        const titleInput = this.view.editForm['title']\n        titleInput.focus();\n\n        // Put cursor at the end\n        const tempvalue = titleInput.value\n        titleInput.value = '';\n        titleInput.value = tempvalue;\n\n        const project = this.model.list[id]\n        const originalTitle = project.title // Save original incase view updates while form's empty\n\n        titleInput.addEventListener('input', () => {\n            const newTitle = titleInput.value\n            if (newTitle)\n                project.title = newTitle\n            else\n                project.title = originalTitle // If field's empty, keep the original title in the model\n        })\n\n        /**\n         * Callback to run when the user finishes editing by sumbitting the form or defocusing the input field. \n         * @param {SubmitEvent|FocusEvent} event Event that fires when the user finishes editing. \n         */\n        const finishEdit = event => {\n            event.preventDefault(); // Incase it's a submit even\n            super.update(); // Only save to local storage after finishing\n            this.select(id); // Reselect the project being edited.\n        }\n\n        this.view.editForm.addEventListener('focusout', finishEdit)\n        this.view.editForm.addEventListener('submit', finishEdit)\n    }\n\n    /** Set event listeners to relevant child project elements and the 'add project' form */\n    listeners() {\n        const container = this.view.container\n        this.view.addForm.addEventListener('submit', this.add.bind(this))\n        setListeners(this, container, '.name', 'click', (e) => this.select(getID(e)))\n        setListeners(this, container, '.delete', 'click', (e) => this.remove(getID(e)))\n        setListeners(this, container, '.project', 'dblclick', (e) => this.edit(getID(e)))\n    }\n}\n\nexport default ProjectListController\n","/**\n * Models define how the app's data is stored. For this app, models are structured \n * as nested objects with each parent containing an array of child objects.\n * \n * The object heirarchy is: Project List (App) -> Projects -> Todos -> Checlist Items\n * \n * @namespace Models\n */\n\n/**\n * @typedef {DataModel} DataModel \n * @ignore \n */\n/**\n * Main parent class for basic data objects: Projects, Todos, and Checklist Items.\n * Each instance has an ID, status flag, and visible flag.\n * \n * @memberof Models\n */\nclass DataModel {\n    /**\n     * Create a model object\n     * @param {number} id ID to be assigned to the instance.\n     */\n    constructor(id){\n        /**\n         * ID of the object. Used as index in parent object's array. \n         * @type {number}\n         */\n        this.id = id;\n        /**\n         * Indiciates if the object is 'done' or not. True = done.\n         * \n         * Default: false\n         * @type {Boolean}\n         */\n        this.status = false;\n        /**\n         * Indicates if the object should be rendered. True = render.\n         * <br><br>\n         * \n         * When a user removes an object, it's not deleted from the parent's array, \n         * instead its visibility is set to 'false'.\n         * <br><br>\n         * \n         * Default: true.\n         * @type {Boolean}\n         */\n        this.visible = true;\n    }\n}\n\n/** \n * Model for checklist items - subtasks for each Todo item\n * \n * @memberof Models\n * @extends DataModel\n * @extends Models.DataModel\n */\nclass ChecklistItem extends DataModel {\n    /**\n     * Create a new checklist item\n     * @param {number} id ID to be assigned to the checklist item\n     * @param {string} descr Descirption to added to the item. \n     */\n    constructor(id, descr) {\n        super(id);\n        /**\n         * Description of the task to be done\n         * @type {string}\n         */\n        this.descr = descr;\n    }\n}\n\n/** \n * Model for todo items \n * \n * @memberof Models\n * @extends DataModel\n * @extends Models.DataModel\n */\nclass Todo extends DataModel {\n    /**\n     * Create new Todo Item\n     * @param {number} id ID to assign - Also acts as index in parent's array object\n     * @param {string} title Main title of the Todo Item\n     * @param {string} descr Description of the todo with more details. Optional - Defualt = null\n     * @param {string} endDate End Date of the todo item. Optional - Default = null\n     * @param {string} startDate Start date of the todo item. Optional - Default = null\n     * @param {ChecklistItem[]} [list=[]]  Array of checklist items. Default = empty array.  \n     */\n    constructor(id, title, descr = null, endDate = null, startDate = null, list = null) {\n        super(id);\n        /**\n         * Main title of the Todo Item\n         * @type {string}\n         */\n        this.title = title;\n\n        /**\n         * Description of the todo with more details\n         * @type {string}\n         */\n        this.descr = descr;\n\n        /**\n         * End Date of the todo item\n         * @type {string}\n         */\n        this.endDate = endDate;\n\n        /**\n         * Start date of the todo item\n         * @type {string}\n         */\n        this.startDate = startDate;\n\n        /**\n         * Array of checklist items\n         * @type {ChecklistItem[]}\n         */\n        this.list = list\n    }\n}\n\n/** \n * Project Model that contains todo items \n * \n * @memberof Models\n * @extends DataModel\n * @extends Models.DataModel\n */\nclass Project extends DataModel {\n    /**\n     * \n     * @param {number} id ID to assign to project\n     * @param {string} title Name of the project\n     * @param {Todo[]} [list= []] Array of todo objects. Default: empty array.\n     */\n    constructor(id, title, list = []) {\n        super(id);\n        /**\n         * Project title/name\n         * @type {string}\n         */\n        this.title = title;\n        /**\n         * Array of todo objects\n         * @type {Todo[]}\n         */\n        this.list = list\n    }\n}\n\n/** \n * Main app object containing a list of projects \n * @memberof Models\n */\nclass ProjectList {\n    /** Create project list by loading from local storage if available or creating an empty list */\n    constructor() {\n        let storedData = localStorage.projectList\n        /**\n         * Array of project objects. Loaded from local storage.\n         * \n         * If local storage location is empty, defaults to empty array.\n         * @type {Project[]}\n         */\n        this.list = storedData? JSON.parse(storedData) : []\n    }\n}\n\nexport { ChecklistItem, Project, Todo, ProjectList }\n","import { statusToClass } from \"./helpers\"\n\n/**\n* Each todo item has subtasks called checklist items which are stored in an array.\n* Rendering cheklist items is handled by a Populator-type View which iterates over \n* the parent Todo model's checklist array and generates separate elements for each checklist item.\n* <br><br>\n*\n* Checklist items can be created by the user through an 'Add Checklist Item' form element.\n* \n* {@link checklistTemplates Visit Module}\n* @namespace ChecklistTemplates\n* @memberof Views.Templates\n\n* @property {Function} standard - Create 'Standard Checklist Item' element HTML {@link checklistTemplates.standard see here}\n* @property {Function} add - Create 'Add Checklist Item' form element HTML {@link checklistTemplates.add see here}\n*/\nconst checklistTemplates = {\n\n    /** Checklist Item Model \n     * @typedef {import(\"../model.js\").ChecklistItem} ChecklistItem \n     */\n\n    /** \n     * Generate HTML for a form that lets users add checklsit items\n     * \n     * {@link checklistTemplates.add View}\n     * @memberof Views.Templates.ChecklistTemplates\n     * \n     * @returns {string} Element Outer HTML\n     */\n    add() {\n        const elementHTML =\n            `<form id=\"new-checklist-item\"><input required placeholder=\"New task\" name=\"descr\"><form>`\n        return elementHTML\n    },\n\n    /**\n   * Generate HTML for the standard view element that displays a checklist item\n   * \n   * {@link checklistTemplates.standard  View } \n   * @memberof Views.Templates.ChecklistTemplates\n   * \n   * @param {ChecklistItem} item Checklist item model object\n   * @returns {string} Element Outer HTML\n   */\n    standard(item) {\n        const elementHTML =\n            `<div class=\"checklist-item ${statusToClass(item, 'done')}\" data-child-id=\"${item.id}\">\n                <input class=\"descr\" value=\"${item.descr}\">\n                <div class=\"item-button-container\">    \n                    <div class=\"item-button done-toggle\">✓</div>\n                    <div class=\"item-button delete\">x</div>\n                </div>\n            </div>`\n        return elementHTML\n    }\n}\n\nexport default checklistTemplates\n","/**\n * Functions to facilitate Template literal interpolation with model objects\n * @namespace Views.TemplateHelpers\n */\n\n/**\n * Returns a string based on the model's status that can be added to a view element's class list\n * @memberof Views.TemplateHelpers\n * @param {Object} model - Model object being checked\n * @param {string} htmlClass - string to be returned if the model's status is 'true'\n * @returns {string} - HTML class name if Todo's status is true, blank ('') if false.\n */\nfunction statusToClass(model, htmlClass) {\n    return model.status ? htmlClass : '';\n}\n /**@typedef {import('../model.js').DataModel} DataModel*/   \n /**\n  * Filters child objects based on their visibility\n  * @memberof Views.TemplateHelpers\n  * @param {DataModel[]} list - Array of model objects\n  * @returns {DataModel[]} - Filtered array of model objects\n  */\n function getVisible(list) { return list.filter(item => item.visible)}\n\n export {statusToClass, getVisible}\n","import todoTemplates from \"./todo.js\";\nimport projectTemplates from \"./project.js\";\nimport checklistTemplates from \"./checklist.js\";\nimport projectListTemplates from \"./projectList.js\";\n/** @typedef {import(\"../model.js\").DataModel} DataModel */\n\n/***\n * In this project, templates are functions that optionally receive model \n * objects and use them to interpolate template literals and return strings of HTML.\n * Template modules contain templates related to a specific view.\n * Open one and check them out (project.js is intense)\n */\n\n/**\n * Converts template literals into HTML element objects.\n * <br><br>\n * \n * Note: This isn't straightforward because you can't edit an element objects outer \n * HTML if it's not in the document, so a temporary wrapper element is used.\n * \n * @memberof Views.Templates\n * \n * @param {string} elementHTML - The outer HTML of the element being created\n * @returns {Element} - Element object \n */\nconst convertElement = elementHTML => {\n    const tempWrapper = document.createElement('div');\n    tempWrapper.innerHTML = elementHTML;\n    // To consistently keep the output as a single element object, NOT HTML Collections:\n    if (tempWrapper.childElementCount === 1) // Check if template element is already wrapped\n        return tempWrapper.firstChild        // Return it if true, otherwise return temp wrapper\n    return tempWrapper                       // This is a failsafe, not a feature. \n}\n\n/** \n * Consilidate template modules into a dictionary to allow view constructors to reference them with the {@link templates command pattern} below.\n\n * @namespace Views.Templates\n * \n * @property {Object} Todo - Todo View Templates {@link todoTemplates see here}\n * @property {Object} Project - Project View Templates {@link projectTemplates see here}\n * @property {Object} Checklist - Checklist View Templates {@link checklistTemplates see here}\n * @property {Object} ProjectList - Project List View Templates {@link projectListTemplates see here}\n */\nconst viewTemplates = {\n    Todo: todoTemplates,\n    Project: projectTemplates,\n    Checklist: checklistTemplates,\n    ProjectList: projectListTemplates\n}\n\n/**\n * Takes the view and element types as inputs and returns a function that \n * accepts a model object and returns an HTML element. \n * <br><br>\n * \n * The returned function calls the appropriate template function by creating a \n * reference to members of nested objects, similar to a command pattern.\n * <br><br>\n * \n * {@link templates View}\n * @memberof Views.Templates\n * @default\n * \n * @param {string} view - View/Model type (Todo, Project, Project List)\n * @param {string} type - Template type (standard, add, edit)\n * @returns {Function} - Function that accepts a model and returns an Element object\n */\nexport default function templates(view, type) {\n    /**\n     * Creates and returns an HTML element using the template specificied when this function was created.\n     * Optionally using a model object.\n     * @param {DataModel} model - (Optional) Model object used to populate the element's HTML\n     * @returns {Element} - HTML element\n     */\n    return function (model = null) {\n        const templateHTML = viewTemplates[view][type](model);\n        return convertElement(templateHTML);\n    }\n}\n","import { statusToClass, getVisible } from \"./helpers\"\n\n/**\n * This module consolidates the tempaltes that are used to render the project view.\n * <br><br>\n * \n * A project contains an array of todo objects. To render a project, a populator-type\n * view is used that iterates through the array and creates separate elements for \n * each todo object.\n * <br><br>\n * \n * There are other templates that can be rendered by the View for adding new Todos, editing Todos, and \n * informing the user that they need to add a new project if the project list's empty.\n * \n * {@link projectTemplates Visit Module}\n * @namespace ProjectTemplates\n * @memberof Views.Templates\n * \n * @property {Function} add - Create 'Add Todo Form' element HTML {@link projectTemplates.add see here}\n * @property {Function} standard - Create 'Standard Todo' element HTML {@link projectTemplates.standard see here}\n * @property {Function} edit  - Create 'Edit Todo' element HTML {@link projectTemplates.edit see here}\n * @property {Function} empty - Create 'Empty Projects' element HTML {@link projectTemplates.empty see here}\n * \n */\nconst projectTemplates = {\n\n    /** Todo model object\n     *  @typedef { import(\"../model.js\").Todo} Todo\n     */\n\n    /**\n     * Create an HTML string of the standard element displaying a Todo's information \n     * in the Project View.\n     * \n     * {@link projectTemplates.standard View}\n     * @memberof Views.Templates.ProjectTemplates\n     * @param {Todo} todoObj Todo model object\n     * @returns {string} Element's Outer HTML\n     */\n    standard(todoObj) {\n        const elementHTML =\n            `<div class=\"card ${statusToClass(todoObj, 'done')}\" data-child-id=\"${todoObj.id}\">\n                <h2 class=\"title\">${todoObj.title}</h2>\n                <p class=\"descr\">${todoObj.descr}</p>\n                <h4 class=\"checklist-title\">Tasks</h4>\n                <div class=\"checklist-container\">${\n                ( // Item Array > Filter inactive > Map to template string > Slice First 3 > Remove commas\n                    getVisible(todoObj.list).map(item =>\n                        `<li class=\"checklist-item ${statusToClass(item, 'done')}\">${item.descr}</li>`\n                    ).slice(0, 3).join('')\n                ) + (\n                    (getVisible(todoObj.list).length > 3) ?\n                        '<div class=\"more-items-inside\"></div>' : ''\n                )\n                }</div>\n                <div class=\"button-container\">\n                    <div class=\"done-toggle button\">Done</div>\n                    <div class=\"delete button\">Delete</div>\n                </div>\n            </div>`\n        return elementHTML\n    },\n\n    /** \n     * Generate HTML for the element containing forms to create and append a new todo to the project\n     * \n     * {@link projectTemplates.add View}\n     * @memberof Views.Templates.ProjectTemplates\n     * \n     * @returns {string} Element's Outer HTML\n     */\n    add() {\n        const elementHTML =\n            `<form id=\"new-todo\" class=\"card\">\n                <input required class=\"title\" name=\"title\" placeholder=\"New Todo\">\n                <textarea class=\"descr\" name=\"descr\" placeholder=\"Description\"></textarea>\n                <h4 class=\"checklist-title\">Tasks</h4>\n                <div class=\"checklist-container\">\n                    <input name =\"checklist\" class=\"checklist-input\">\n                    <input name =\"checklist\" class=\"checklist-input\">\n                    <input name =\"checklist\" class=\"checklist-input\">\n                </div>\n                <div class=\"button-container\">\n                    <button type=\"submit\" id=\"add-todo\" class=\"button\">Add</button>\n                    <button type=\"reset\" id=\"reset-todo-inputs\" class=\"button\">Reset</div>\n                </div>\n            </form>`\n        return elementHTML\n    },\n\n    /**\n     * Generate HTML for the element containing forms to create and append a new todo to the project\n     * \n     * {@link projectTemplates.edit View}\n     * @memberof Views.Templates.ProjectTemplates\n     * \n     * @param {Todo} todoObj Todo model object\n     * @returns {string} Element's Outer HTML\n     */\n    edit(todoObj) {\n        const activeList = getVisible(todoObj.list)\n        const elementHTML =\n            `<form class=\"edit-form card\">\n                <input required class=\"title\" name=\"title\" value=\"${todoObj.title}\">\n                <textarea class=\"descr\" name=\"descr\">${todoObj.descr}</textarea>\n                <h4 class=\"checklist-title\">Tasks</h4>\n                <div class=\"checklist-container\">\n                        <input name =\"list\" class=\"checklist-input\" value=\"${activeList[0] ? activeList[0].descr : \"\"}\">\n                        <input name =\"list\" class=\"checklist-input\" value=\"${activeList[1] ? activeList[1].descr : \"\"}\">\n                        <input name =\"list\" class=\"checklist-input\" value=\"${activeList[2] ? activeList[2].descr : \"\"}\">\n                </div>\n                <div class=\"button-container\">\n                    <button type=\"submit\" id=\"add-todo\" class=\"button\">Save</button>\n                    <div id=\"reset-todo-inputs\" class=\"button\">Delete</div>\n                </div>\n            </form>`\n        return elementHTML\n    },\n\n    /** \n     * Generate HTML for the element to add to the project view when there are no projects\n     * \n     * {@link projectTemplates.empty View}\n     * @memberof Views.Templates.ProjectTemplates\n     * \n     * @returns {string} Element's Outer HTML\n     */\n    empty() {\n        const elementHTML =\n            `<div id=\"new-app\">← Add a new project</div>`\n        return elementHTML\n    }\n\n}\n\nexport default projectTemplates\n","/**\n * Templates for the project list view, AKA the sidebar.\n *\n * The Project List uses a populator-type View which will iterate over its \n * projects array and generate elements for each project.\n * \n * There are also templates for adding new projects and editing existing projects. \n * \n * {@link projectListTemplates Visit Module}\n * @namespace ProjectListTemplates\n * @memberof Views.Templates\n * \n * @property {Function} standard - Create HTML for standard project element {@link projectListTemplates.standard see here}\n * @property {Function} add - Create HTML for a form element for adding a new project {@link projectListTemplates.add see here}\n * @property {Function} edit - Create HTML for form element for editing an existing project {@link projectListTemplates.edit see here}\n */\nconst projectListTemplates = {\n\n    /**\n     * Project model object\n     * @typedef {import('../model.js').Project} Project\n     */\n\n    /**\n     * Generate HTML for the standard element that displays a project's information and contains relevant buttons and attributes\n     * \n     * {@link projectListTemplates.standard View}\n     * @memberof Views.Templates.ProjectListTemplates\n     * \n     * @param {Project} project - Project model\n     * @returns {string} Element Outer HTML\n     */\n    standard(project) {\n        const elementHTML =\n            `<div class=\"project\"  data-child-id=\"${project.id}\" >\n            <p class=\"name\">${project.title}</p>\n            <div class=\"delete\">x</div>\n        </div>`\n        return elementHTML\n    },\n\n    /**\n     * Generate HTML for a form element for adding a new projects\n     * @memberof Views.Templates.ProjectListTemplates\n     * @returns {string} Element Outer HTML\n     */\n    add() {\n        const elementHTML =\n            `<form id=\"new-project\"><input required placeholder=\"New Project\" name=\"name\"><form>`\n        return elementHTML\n    },\n\n    /**\n     * Generate HTML for a form element for editing an existing project\n     * \n     * {@link projectListTemplates.edit View}\n     * @memberof Views.Templates.ProjectListTemplates\n     * \n     * @param {Project} projectObj Project model to pull data from and fill the form\n     * @returns {string} Element Outer HTML\n     */\n    edit(projectObj) {\n        const elementHTML =\n            `<form class=\"edit-form\"><input required value=\"${projectObj.title}\" name=\"title\"><form>`\n        return elementHTML\n    }\n}\n\nexport default projectListTemplates\n","import { statusToClass } from \"./helpers\"\n\n/**\n * Template for the element that shows the Todo item in more detail.\n * Is rendered by the view when you click the todo item.\n * \n * {@link todoTemplates Visit Module}\n * @namespace TodoTemplates\n * @memberof Views.Templates\n * \n * @property {Function} standard - Create Outer HTML for the standard Todo View Element {@link todoTemplates.standard see here}\n */\nconst todoTemplates = {\n    /**\n     * Todo model object \n     * @typedef {import ('../model.js').Todo} Todo\n     */\n\n    /**\n     * Generate HTML for a modal element using a todo object model. The modal displays \n     * properties of the Todo item in more detail.\n     * \n     * {@link todoTemplates.standard View}\n     * @memberof Views.Templates.TodoTemplates\n     * \n     * @param {Todo} todoObj Todo object to fill modal values with\n     * @returns {string} Element Outer HTML\n     */\n    standard(todoObj){\n        const elementHTML =\n            `<div id=\"todo-background\">\n                <form id=\"todo-details\" class=\"${statusToClass(todoObj,'done')}\">\n                    <input required class=\"title\" name=\"title\" value=\"${todoObj.title}\">\n                    <textarea class=\"descr\" name=\"descr\">${todoObj.descr}</textarea>\n                    <div class=\"checklist-container\">\n                        <h3>Tasks</h3>\n                        <div id=\"checklist\"></div>\n                    </div>\n                    <div class=\"dates\">\n                        <div class=\"date-container\">\n                            <p class=\"date-type\">Start Date</p>\n                            <input type=\"date\" name=\"startDate\" value=\"${todoObj.startDate || ''}\">\n                        </div>\n                        <div class=\"date-container\">\n                            <p class=\"date-type\">End Date</p>\n                            <input type=\"date\" name=\"endDate\" value=\"${todoObj.endDate || ''}\">\n                        </div>\n                    </div>\n                    <div class=\"button-container\">\n                        <button class=\"save button\" type=\"submit\" name=\"save\">Save</button>\n                        <div class=\"done-toggle button\">Done</div>\n                        <div class=\"delete button\">Delete</div>\n                    </div>\n                </form>\n            </div>`\n        return elementHTML\n    }\n}\n\nexport default todoTemplates\n","import templates from \"./templates\"\n/**\n * Import model types\n * @typedef {import(\"./model\").DataModel}\n * @typedef {import(\"./model\").Todo}\n */\n\n/**\n * View classes used to draw different types of models to the DOM.\n * Also contains templates.\n * @namespace Views\n */\n\n/**\n * Consolidates generic containers for use by views.\n * <br><br>\n * \n * Built as a psuedo-dictionary using getters to select elements when called by a new view's constructor.\n * This circumvents containers that aren't in the DOM at page load (i.e. containers that are\n * elements in other yet-to-be-rendered views) \n * \n * {@link containers View}\n * @memberof Views~\n */\nconst containers = {\n    get Checklist() { return document.getElementById('checklist') },\n    get Todo() { return document.body },\n    get Project() { return document.querySelector('main') },\n    get ProjectList() { return document.getElementById('projects') },\n}\n\n/** \n * Parent abstract view class.\n * \n * Views handle drawing elements to the DOM based on data stored in a source model. \n * {@link View View}\n * @memberof Views~\n */\nclass View {\n    /**\n     * @param {DataModel} model Object to render data from\n     * @param {string} type View type i.e. Todo, Project, Project List\n     */\n    constructor(model, type) {\n        // Ensure class is abstract\n        if (this.constructor === View) throw new Error('Abstract Class')\n\n        /**\n         * View object's source data model\n         * @type {DataModel}\n         */\n        this.model = model;\n\n        /**\n         * DOM element to append view elements to \n         * @type {Element}\n         */\n        this.container = containers[type];\n\n        /**\n         * Generate a standard view element displaying a model object's data.\n         * @type {Function}\n         * @param {DataModel} model Model object\n         * @returns {Element} HTML element\n         */\n        this.standardTemplate = templates(type, 'standard')\n    }\n\n    /** \n     * Create standard element(s) and append to the container \n     * Some views might need to clear their container, or append extra elements.\n     */\n    render() { }\n}\n\n/**\n * This View class handles rendering and manipulating models that contain an \n * array of child models [Project List > Array of projects].\n * <br><br>\n * \n * The view handler loops through the array of child models to generate elements\n * and populates a specified DOM container with said elements.\n * <br><br>\n * \n * Each standard element can enter 'edit mode' if called by the controller, where \n * it's replaced by an edit form that allows the user to quickly change model properties.\n * <br><br>\n * \n * Populator views also have 'add' elements allowing the user to create a new child \n * model (logic is handled by the controller).\n * <br><br>\n * \n * {@link PopulatorView View}\n * @extends View\n * @extends Views~View\n * @memberof Views\n */\nclass PopulatorView extends View {\n    /**\n     * @param {DataModel} model Object to render data from\n     * @param {string} type View type i.e. Project, Project List\n     */\n    constructor(model, type) {\n        super(model, type);\n\n        /**\n         * Generate Element for the user to add new child object\n         * @type {Function}\n         * @returns {Element}\n         */\n        this.addFormTemplate = templates(type, 'add')\n\n        /**\n         * Generate a form, initially filled with the object's data that allows the user to edit the object.\n         * @type {Function}\n         * @param {DataModel} model Model object\n         * @returns {Element} HTML element\n         */\n        this.editFormTemplate = templates(type, 'edit');\n    }\n\n    /**\n     * Filters removed (visible=false) objects from an array of model objects\n     * @param {DataModel[]} list Array of model objects\n     * @returns {DataModel[]} Filtered copy of original array\n     */\n    getActive(list) { return list.filter(model => model.visible) }\n\n    /**\n     * Default rendering function that clears the view container and populates it with \n     * standard elements for each child object and a form to add new children.\n     * \n     * {@link render View}\n     */\n    render() {\n        this.container.innerHTML = ''; // Clear container\n\n        const list = this.model.list;\n\n        this.getActive(list).forEach(childObj => {\n            const standardElement = this.standardTemplate(childObj)\n            this.container.appendChild(standardElement)\n        })\n        /**\n         * Reference to the DOM 'add child' form element\n         * @type {HTMLFormElement}\n         */\n        this.addForm = this.container.appendChild(this.addFormTemplate());  // Append 'Add \"model\"' element \n    }\n\n    /**\n     * Switch the DOM element representing the child model with an 'edit form' that's  \n     * pre-filled with the model's original properties and allows the user to edit those properties.\n     * \n     * {@link editMode View}\n     * \n     * @param {number} id - ID of the child model object being edited\n     */\n    editMode(id) {\n        const elementToEdit = this.container.querySelector(`[data-child-id=\"${id}\"]`);\n\n        /**\n         * Reference to the DOM 'edit child' form element\n         * @type {HTMLFormElement}\n         */\n        this.editForm = this.editFormTemplate(this.model.list[id]);\n\n        elementToEdit.replaceWith(this.editForm);\n    }\n\n    /**\n     * Add or remove an HTML class to the element representing the child object.\n     * It's also possible to set the class to the specific child exclusively by \n     * removing it from all other children elements.\n     * \n     * {@link setClass View}\n     * \n     * @param {number} id - The ID of the child model object\n     * @param {string} className- The class to be added/removed \n     * @param {boolean} remove - True: Remove class. False: Add class. (Default: False) \n     * @param {boolean} exclusive - True: Remove class from all other children. (Default: False)\n     */\n    setClass(id, className, remove = false, exclusive = false) {\n        [...this.container.children].forEach(el => {\n            const elementID = el.getAttribute('data-child-id')\n            if (elementID == id)\n                el.classList[(remove ? 'remove' : 'add')](className)\n            else\n                if (exclusive) el.classList.remove(className)\n        })\n    }\n}\n\n/**\n * Handles the rendering and DOM manipulation for a modal element that displays the details \n * for a specific Todo model. Can be generalized for other models that would benefit \n * from being rendered as a single modal.\n * \n * {@link TodoView View}\n * \n * @extends View\n * @extends Views~View\n * @memberof Views\n */\nclass TodoView extends View {\n    /**\n     * @param {Todo} todo  Source Todo model object\n     */\n    constructor(todo) {\n        super(todo, 'Todo');\n    }\n\n    render() {\n        // Generate and append element\n        this.standardElement = this.standardTemplate(this.model)\n        this.container.appendChild(this.standardElement)\n\n        /**\n         * The modal body is composed of a form that's pre-filled with the model data.\n         * The controller handles how to update the model using user inputs into its fields.\n         * @type {HTMLFormElement}\n         */\n        this.form = this.standardElement.querySelector('form')\n    }\n\n    /**\n     * Remove modal element from the container\n     */\n    hide() {\n        this.container.removeChild(this.standardElement)\n    }\n\n    /**\n     * Add or Remove an HTML class to the modal.\n     * @param {string} className - The class to be added to the modal's body\n     * @param {Boolean} remove - True: Remove class. False: Add class. (Default: False)\n     */\n    setClass(className, remove = false) {\n        this.form.classList[(remove ? 'remove' : 'add')](className)\n    }\n}\n\n/**\n * When there are no projects in the proejct list, this renders a default element \n * in the project container that normally holds Todo cards. This view is called by \n * the project list controller. \n * \n * {@link NewAppView View}\n * @memberof Views.\n */\nclass NewAppView {\n    constructor() {\n        this.emptyTemplate = templates('Project', 'empty');\n        this.container = containers['Project'];\n        this.render();\n    }\n\n    render() {\n        this.container.innerHTML = '';\n        this.element = this.emptyTemplate()\n        this.container.appendChild(this.element)\n    }\n}\n\nexport { PopulatorView, TodoView, NewAppView }\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Dosis:wght@200;300;400;500;600&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root {\\n    font-family: 'Dosis', 'Helvetica Neue', sans-serif;\\n    font-size: 20px;\\n    font-weight: 300;\\n    --light-blue: rgb(239, 242, 250);\\n    --light-green: rgb(237, 248, 237);\\n    --lighter-green: hsl(120, 44%, 98%);\\n}\\n\\nform * {\\n    font-family:'Dosis', 'Helvetica Neue', sans-serif; ;\\n}\\n\\n*{\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nbody {\\n    height: 100vh;\\n    width: 100vw;\\n    \\n    display: grid;\\n    grid-template-columns: 260px 1fr;\\n    grid-template-rows: 100px 1fr;\\n    grid-template-areas: \\\"header header\\\"\\n    \\\"sidebar main\\\";\\n}\\n\\nheader {\\n    grid-area: header;\\n    z-index: 2;\\n    height: 100px;\\n    padding: 0 20px;\\n\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    background-color: white;\\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\\n}\\n\\n#logo {\\n    font-size: 2.5rem;\\n    color: cornflowerblue;\\n}\\n\\n#inspiration {\\n    font-size: 1.5rem;\\n}\\n\\n#sidebar {\\n    overflow: auto;\\n    grid-area: sidebar;\\n    box-shadow: 0 0 8px rgba(0,0,0,0.5);\\n}\\n\\n#projects {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#projects .project{\\n    box-sizing: border-box;\\n    height: 60px;\\n    padding: 5px 10px;\\n    position: relative;\\n\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n\\n    color: rgb(100, 100, 100);\\n    transition: all 300ms ease-out;\\n    background-color: white;\\n    box-shadow: inset 1px 0px 4px rgba(0,0,0,0.3);\\n    outline: solid 0.5px rgb(213, 213, 213);\\n    cursor: pointer;\\n}\\n\\n#projects .project.active {\\n    z-index: 1;\\n    color: white;\\n    position: relative;\\n    padding-left: 9px;\\n    box-shadow: inset 1px 0px 2px rgba(0,0,0,0.5);\\n}\\n\\n#projects .project::after{\\n    content: \\\"\\\";\\n    width: 6px;\\n    height:100%;\\n    position: absolute;\\n    right:0;\\n    top:0;\\n\\n    transition: 300ms ease-out;\\n    background-color: cornflowerblue; \\n}\\n\\n#projects .project.active::after {\\n    z-index: -1;\\n    content: \\\"\\\";\\n    width: 100%;\\n    height:100%;\\n    position: absolute;\\n    right:0;\\n    top:0;\\n    background-color: cornflowerblue;\\n}\\n\\n#projects .project:hover{\\n    background-color: var(--light-blue);\\n}\\n\\n#projects .project:not(.active):hover::after{\\n    content: \\\"\\\";\\n    width: 12px;\\n    height:100%;\\n    position: absolute;\\n    right:0;\\n    top:0;\\n    background-color: cornflowerblue;\\n}\\n\\n#projects .name{\\n    line-height: 2rem;\\n    flex: 1;\\n}\\n\\n\\n#projects .delete{\\n    color: palevioletred;\\n    cursor: pointer;\\n    font-family: Arial, Helvetica, sans-serif;\\n    \\n    margin-right: 10px;\\n    opacity: 0;\\n    transition: 200ms, margin 400ms ease-out;\\n}\\n\\n#projects .active .delete{\\n    color: white;\\n}\\n\\n#projects .project:hover .delete{\\n    opacity: 0.6;\\n}\\n\\n#projects .project:hover .delete:hover{\\n    opacity: 1;\\n}\\n\\n#projects .edit-form input{\\n    color: white;\\n    background-color: cornflowerblue;\\n    font-style: italic;\\n}\\n\\n#projects input {\\n    padding: 5px 10px;\\n    box-sizing: border-box;\\n    appearance: none;\\n    height: 60px;\\n    width: 100%;\\n\\n    color: rgb(160, 160, 160);\\n    box-shadow: inset 1px 0px 4px rgba(0,0,0,0.5);\\n    font-size: 0.9rem;\\n    outline: none;\\n    border: none;\\n}\\n\\n#projects input::placeholder {\\n    font-style: italic;\\n    color: rgb(196, 193, 193);\\n  }\\n\\nmain {\\n    overflow: auto;\\n    padding: 30px 30px;\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, 350px);\\n    grid-auto-rows: max-content;\\n    gap: 30px;\\n}\\n\\n.card {\\n    position: relative;\\n    box-sizing: border-box;\\n    padding: 20px 30px;\\n    height: 300px;\\n    background-color: white;\\n    box-shadow: 2px 2px 9px rgba(0,0,0,0.5);\\n\\n    display: flex;\\n    flex-direction: column;\\n\\n    transition: 300ms;\\n    cursor: pointer;\\n}\\n\\n.card::after{\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    width:10px;\\n    height: 100%;\\n    background-color: cornflowerblue;\\n}\\n\\n.card .title{\\n    font-size: 1.3rem;\\n    width: fit-content;\\n    margin-bottom: 5px;\\n    overflow: hidden;\\n\\n    display: -webkit-box;\\n    -webkit-line-clamp: 2;\\n    -webkit-box-orient: vertical;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n\\n    cursor: text;\\n}\\n\\n.card .descr{\\n    margin-bottom: 10px;\\n    width: fit-content;\\n\\n    font-size: 1rem;\\n    line-height: 1em;\\n    height: 2em;\\n\\n    display: -webkit-box;\\n    -webkit-line-clamp: 2;\\n    -webkit-box-orient: vertical;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n\\n    cursor: text;\\n}\\n\\n.card .descr:empty::after{\\n    content: 'Description';\\n    cursor: text;\\n    font-style:italic;\\n    color:rgb(160, 160, 160)\\n}\\n\\n.card .checklist-title {\\n    font-size: 0.9rem;\\n    margin-bottom: 5px;\\n    cursor: text;\\n}\\n\\n.card .checklist-container{\\n    display: flex;\\n    flex-direction: column;\\n    gap: 5px;\\n    overflow-y: auto;\\n}\\n\\n.card:not(#new-todo,.edit-form) .checklist-container{\\n    pointer-events: none;\\n}\\n\\n.card .checklist-item{\\n    color: grey;\\n    font-size: 0.9rem;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    list-style: square; \\n    width: min(fit-content,100%);\\n    \\n    cursor: text;\\n    pointer-events: all;\\n}\\n\\n.card .checklist-container:empty{\\n    width: fit-content;\\n}\\n\\n.card .checklist-container:empty::after {\\n    margin-top: 10px;\\n    content: \\\"Add Tasks\\\";\\n    font-style: italic;\\n    color:rgb(160, 160, 160);\\n    font-size: 0.8rem;\\n    cursor: text;\\n}\\n\\n.card .button-container{\\n    margin-top: auto;\\n\\n    display: flex;\\n    justify-content: space-evenly;\\n\\n}\\n\\nbutton {\\n    appearance: none;\\n    border: none;\\n}\\n\\n.button{\\n    box-sizing: border-box;\\n    padding: 5px;\\n    font-size: 0.9rem;\\n    width: 80px;\\n    border-radius: 6px;\\n    text-align: center;\\n    color: white;\\n    background-color: cornflowerblue;\\n    transition: 300ms ease-in-out;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.button:hover{\\n    background-color: rgb(90, 131, 207);\\n}\\n\\n.button.done-toggle{\\n    background-color: cornflowerblue;\\n}\\n\\n.button.done-toggle:hover{\\n    background-color: green;\\n}\\n\\n.card.done .done-toggle{\\n    background-color: green;\\n}\\n\\n.button.delete{\\n    background-color: crimson;\\n}\\n\\n.button.delete:hover{\\n    background-color: brown;\\n}\\n\\n#reset-todo-inputs{\\n    background-color: rgb(170, 170, 170);\\n}\\n\\n#reset-todo-inputs:hover{\\n    background-color: grey;\\n}\\n\\n\\n.card.done {\\n    background-color: var(--light-green);\\n}\\n\\n.card.done .title {\\n    text-decoration: line-through;\\n    color:rgb(80, 80, 80)\\n}\\n\\n.card input,textarea {\\n    resize: none;\\n    padding: 4px 5px;\\n    outline: none;\\n    border: 0.3px rgb(208, 208, 208) solid;\\n    border-radius: 5px;\\n    \\n    color: rgb(100, 100, 100);\\n    font-style: italic;\\n}\\n\\n.card input.title{\\n    width: auto;\\n}\\n\\n.card textarea.descr{\\n    font-size: 0.8rem;\\n    width: auto;\\n}\\n\\n#todo-background{\\n    z-index: 1;\\n    height: 100vh;\\n    width: 100vw;\\n    background-color: rgba(0,0,0,0.5);\\n    position: absolute;\\n}\\n\\n#todo-details{\\n    padding: 30px 50px;\\n    position: absolute;\\n    top: 100px;\\n    left: 200px;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 20px;\\n    background-color: white;\\n    height: 60vh;\\n    width: 70vw;\\n\\n    transition: 300ms;\\n}\\n\\n#todo-details.done{\\n    background-color: var(--lighter-green);\\n}\\n\\n#todo-details :is(input,textarea){\\n    transition-duration: 300ms;\\n    background-color: white;\\n}\\n\\n#todo-details.done :is(input,textarea){\\n    background-color: var(--light-green);\\n}\\n\\n#todo-details .title{\\n    font-size: 2rem;\\n    padding-left: 10px;\\n}\\n\\n#todo-details textarea.descr{\\n    padding-left: 10px;\\n    font-style: normal;\\n    font-size: 1.1rem;\\n    height: 20%;\\n    resize: none;\\n}\\n\\n#todo-details input,textarea{\\n    appearance: none;\\n    color: rgb(100, 100, 100);\\n    outline: none !important;\\n    border-radius: 5px;\\n    border: 0.5px rgb(180, 180, 180) solid;\\n}\\n\\n#todo-details #more-details{\\n    height: 50%;\\n    display: flex;\\n    flex:1;\\n}\\n\\n#todo-details h3{\\n    font-size: 1rem;\\n}\\n\\n#todo-details .checklist-container{\\n    font-size: 1.2rem;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 10px;\\n}\\n\\n#todo-details .checklist-container ul{\\n    display: flex;\\n    flex-direction: column;\\n    gap: 15px;\\n}\\n\\n#todo-details .checklist-container input{\\n    line-height: 30px;\\n    padding-left: 10px;\\n    font-size: 0.9rem;\\n}\\n\\n#todo-details .dates{\\n    flex:1;\\n    display: flex;\\n    gap: 60px;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n#todo-details .date-container{\\n    display: flex;\\n    align-items: center;\\n    gap: 10px;\\n}\\n\\n#todo-details .date-container input{\\n    font-size: 1rem;\\n}\\n\\n#todo-details .date-type{\\n    text-align: center;\\n}\\n\\n#todo-details .button-container{\\n    display: flex;\\n    justify-content: center;\\n    gap: 110px;\\n    position: relative\\n}\\n\\n#todo-details.done .done-toggle{\\n    background-color: green;\\n}\\n\\n#todo-details .button{\\n    width: 110px;\\n}\\n\\n#todo-details .save.button{\\n    color: white;\\n}\\n\\n#checklist {\\n    overflow: auto;\\n    height: 10rem;\\n}\\n\\n#checklist .checklist-item {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n#checklist input {\\n    box-sizing: border-box;\\n    width:100%;\\n    height: 40px;\\n    margin-right: -50px;\\n}\\n\\n#checklist .done input {\\n    text-decoration: line-through;\\n    background-color: var(--light-green);\\n}\\n\\n#checklist .item-button-container {\\n    display: flex;\\n    gap: 5px;\\n    user-select: none;\\n}\\n\\n#checklist .item-button {\\n    cursor: pointer;\\n    transition: 200ms ease-out;\\n}\\n\\n#todo-details #checklist .done-toggle {\\n    font-weight: 600;\\n    background-color: transparent;\\n    color: grey;\\n}\\n\\n#todo-details #checklist .done-toggle:hover {\\n    color: green;\\n}\\n\\n#todo-details #checklist .done .done-toggle {\\n    background-color: transparent;\\n    color: green;\\n}\\n\\n#todo-details #checklist .delete{\\n    color: crimson;\\n}\\n\\n#todo-details #checklist .delete:hover{\\n    color: brown;\\n}\\n\\n#new-app {\\n    color: cornflowerblue;\\n    width: 500px;\\n    font-size: 1.7rem;\\n    margin-top: -14px;\\n    font-style: italic;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/assets/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Dosis:wght@200;300;400;500;600&display=swap');\\n\\n:root {\\n    font-family: 'Dosis', 'Helvetica Neue', sans-serif;\\n    font-size: 20px;\\n    font-weight: 300;\\n    --light-blue: rgb(239, 242, 250);\\n    --light-green: rgb(237, 248, 237);\\n    --lighter-green: hsl(120, 44%, 98%);\\n}\\n\\nform * {\\n    font-family:'Dosis', 'Helvetica Neue', sans-serif; ;\\n}\\n\\n*{\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nbody {\\n    height: 100vh;\\n    width: 100vw;\\n    \\n    display: grid;\\n    grid-template-columns: 260px 1fr;\\n    grid-template-rows: 100px 1fr;\\n    grid-template-areas: \\\"header header\\\"\\n    \\\"sidebar main\\\";\\n}\\n\\nheader {\\n    grid-area: header;\\n    z-index: 2;\\n    height: 100px;\\n    padding: 0 20px;\\n\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    background-color: white;\\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\\n}\\n\\n#logo {\\n    font-size: 2.5rem;\\n    color: cornflowerblue;\\n}\\n\\n#inspiration {\\n    font-size: 1.5rem;\\n}\\n\\n#sidebar {\\n    overflow: auto;\\n    grid-area: sidebar;\\n    box-shadow: 0 0 8px rgba(0,0,0,0.5);\\n}\\n\\n#projects {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#projects .project{\\n    box-sizing: border-box;\\n    height: 60px;\\n    padding: 5px 10px;\\n    position: relative;\\n\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n\\n    color: rgb(100, 100, 100);\\n    transition: all 300ms ease-out;\\n    background-color: white;\\n    box-shadow: inset 1px 0px 4px rgba(0,0,0,0.3);\\n    outline: solid 0.5px rgb(213, 213, 213);\\n    cursor: pointer;\\n}\\n\\n#projects .project.active {\\n    z-index: 1;\\n    color: white;\\n    position: relative;\\n    padding-left: 9px;\\n    box-shadow: inset 1px 0px 2px rgba(0,0,0,0.5);\\n}\\n\\n#projects .project::after{\\n    content: \\\"\\\";\\n    width: 6px;\\n    height:100%;\\n    position: absolute;\\n    right:0;\\n    top:0;\\n\\n    transition: 300ms ease-out;\\n    background-color: cornflowerblue; \\n}\\n\\n#projects .project.active::after {\\n    z-index: -1;\\n    content: \\\"\\\";\\n    width: 100%;\\n    height:100%;\\n    position: absolute;\\n    right:0;\\n    top:0;\\n    background-color: cornflowerblue;\\n}\\n\\n#projects .project:hover{\\n    background-color: var(--light-blue);\\n}\\n\\n#projects .project:not(.active):hover::after{\\n    content: \\\"\\\";\\n    width: 12px;\\n    height:100%;\\n    position: absolute;\\n    right:0;\\n    top:0;\\n    background-color: cornflowerblue;\\n}\\n\\n#projects .name{\\n    line-height: 2rem;\\n    flex: 1;\\n}\\n\\n\\n#projects .delete{\\n    color: palevioletred;\\n    cursor: pointer;\\n    font-family: Arial, Helvetica, sans-serif;\\n    \\n    margin-right: 10px;\\n    opacity: 0;\\n    transition: 200ms, margin 400ms ease-out;\\n}\\n\\n#projects .active .delete{\\n    color: white;\\n}\\n\\n#projects .project:hover .delete{\\n    opacity: 0.6;\\n}\\n\\n#projects .project:hover .delete:hover{\\n    opacity: 1;\\n}\\n\\n#projects .edit-form input{\\n    color: white;\\n    background-color: cornflowerblue;\\n    font-style: italic;\\n}\\n\\n#projects input {\\n    padding: 5px 10px;\\n    box-sizing: border-box;\\n    appearance: none;\\n    height: 60px;\\n    width: 100%;\\n\\n    color: rgb(160, 160, 160);\\n    box-shadow: inset 1px 0px 4px rgba(0,0,0,0.5);\\n    font-size: 0.9rem;\\n    outline: none;\\n    border: none;\\n}\\n\\n#projects input::placeholder {\\n    font-style: italic;\\n    color: rgb(196, 193, 193);\\n  }\\n\\nmain {\\n    overflow: auto;\\n    padding: 30px 30px;\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, 350px);\\n    grid-auto-rows: max-content;\\n    gap: 30px;\\n}\\n\\n.card {\\n    position: relative;\\n    box-sizing: border-box;\\n    padding: 20px 30px;\\n    height: 300px;\\n    background-color: white;\\n    box-shadow: 2px 2px 9px rgba(0,0,0,0.5);\\n\\n    display: flex;\\n    flex-direction: column;\\n\\n    transition: 300ms;\\n    cursor: pointer;\\n}\\n\\n.card::after{\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    width:10px;\\n    height: 100%;\\n    background-color: cornflowerblue;\\n}\\n\\n.card .title{\\n    font-size: 1.3rem;\\n    width: fit-content;\\n    margin-bottom: 5px;\\n    overflow: hidden;\\n\\n    display: -webkit-box;\\n    -webkit-line-clamp: 2;\\n    -webkit-box-orient: vertical;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n\\n    cursor: text;\\n}\\n\\n.card .descr{\\n    margin-bottom: 10px;\\n    width: fit-content;\\n\\n    font-size: 1rem;\\n    line-height: 1em;\\n    height: 2em;\\n\\n    display: -webkit-box;\\n    -webkit-line-clamp: 2;\\n    -webkit-box-orient: vertical;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n\\n    cursor: text;\\n}\\n\\n.card .descr:empty::after{\\n    content: 'Description';\\n    cursor: text;\\n    font-style:italic;\\n    color:rgb(160, 160, 160)\\n}\\n\\n.card .checklist-title {\\n    font-size: 0.9rem;\\n    margin-bottom: 5px;\\n    cursor: text;\\n}\\n\\n.card .checklist-container{\\n    display: flex;\\n    flex-direction: column;\\n    gap: 5px;\\n    overflow-y: auto;\\n}\\n\\n.card:not(#new-todo,.edit-form) .checklist-container{\\n    pointer-events: none;\\n}\\n\\n.card .checklist-item{\\n    color: grey;\\n    font-size: 0.9rem;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    list-style: square; \\n    width: min(fit-content,100%);\\n    \\n    cursor: text;\\n    pointer-events: all;\\n}\\n\\n.card .checklist-container:empty{\\n    width: fit-content;\\n}\\n\\n.card .checklist-container:empty::after {\\n    margin-top: 10px;\\n    content: \\\"Add Tasks\\\";\\n    font-style: italic;\\n    color:rgb(160, 160, 160);\\n    font-size: 0.8rem;\\n    cursor: text;\\n}\\n\\n.card .button-container{\\n    margin-top: auto;\\n\\n    display: flex;\\n    justify-content: space-evenly;\\n\\n}\\n\\nbutton {\\n    appearance: none;\\n    border: none;\\n}\\n\\n.button{\\n    box-sizing: border-box;\\n    padding: 5px;\\n    font-size: 0.9rem;\\n    width: 80px;\\n    border-radius: 6px;\\n    text-align: center;\\n    color: white;\\n    background-color: cornflowerblue;\\n    transition: 300ms ease-in-out;\\n    cursor: pointer;\\n    user-select: none;\\n}\\n\\n.button:hover{\\n    background-color: rgb(90, 131, 207);\\n}\\n\\n.button.done-toggle{\\n    background-color: cornflowerblue;\\n}\\n\\n.button.done-toggle:hover{\\n    background-color: green;\\n}\\n\\n.card.done .done-toggle{\\n    background-color: green;\\n}\\n\\n.button.delete{\\n    background-color: crimson;\\n}\\n\\n.button.delete:hover{\\n    background-color: brown;\\n}\\n\\n#reset-todo-inputs{\\n    background-color: rgb(170, 170, 170);\\n}\\n\\n#reset-todo-inputs:hover{\\n    background-color: grey;\\n}\\n\\n\\n.card.done {\\n    background-color: var(--light-green);\\n}\\n\\n.card.done .title {\\n    text-decoration: line-through;\\n    color:rgb(80, 80, 80)\\n}\\n\\n.card input,textarea {\\n    resize: none;\\n    padding: 4px 5px;\\n    outline: none;\\n    border: 0.3px rgb(208, 208, 208) solid;\\n    border-radius: 5px;\\n    \\n    color: rgb(100, 100, 100);\\n    font-style: italic;\\n}\\n\\n.card input.title{\\n    width: auto;\\n}\\n\\n.card textarea.descr{\\n    font-size: 0.8rem;\\n    width: auto;\\n}\\n\\n#todo-background{\\n    z-index: 1;\\n    height: 100vh;\\n    width: 100vw;\\n    background-color: rgba(0,0,0,0.5);\\n    position: absolute;\\n}\\n\\n#todo-details{\\n    padding: 30px 50px;\\n    position: absolute;\\n    top: 100px;\\n    left: 200px;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 20px;\\n    background-color: white;\\n    height: 60vh;\\n    width: 70vw;\\n\\n    transition: 300ms;\\n}\\n\\n#todo-details.done{\\n    background-color: var(--lighter-green);\\n}\\n\\n#todo-details :is(input,textarea){\\n    transition-duration: 300ms;\\n    background-color: white;\\n}\\n\\n#todo-details.done :is(input,textarea){\\n    background-color: var(--light-green);\\n}\\n\\n#todo-details .title{\\n    font-size: 2rem;\\n    padding-left: 10px;\\n}\\n\\n#todo-details textarea.descr{\\n    padding-left: 10px;\\n    font-style: normal;\\n    font-size: 1.1rem;\\n    height: 20%;\\n    resize: none;\\n}\\n\\n#todo-details input,textarea{\\n    appearance: none;\\n    color: rgb(100, 100, 100);\\n    outline: none !important;\\n    border-radius: 5px;\\n    border: 0.5px rgb(180, 180, 180) solid;\\n}\\n\\n#todo-details #more-details{\\n    height: 50%;\\n    display: flex;\\n    flex:1;\\n}\\n\\n#todo-details h3{\\n    font-size: 1rem;\\n}\\n\\n#todo-details .checklist-container{\\n    font-size: 1.2rem;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 10px;\\n}\\n\\n#todo-details .checklist-container ul{\\n    display: flex;\\n    flex-direction: column;\\n    gap: 15px;\\n}\\n\\n#todo-details .checklist-container input{\\n    line-height: 30px;\\n    padding-left: 10px;\\n    font-size: 0.9rem;\\n}\\n\\n#todo-details .dates{\\n    flex:1;\\n    display: flex;\\n    gap: 60px;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n#todo-details .date-container{\\n    display: flex;\\n    align-items: center;\\n    gap: 10px;\\n}\\n\\n#todo-details .date-container input{\\n    font-size: 1rem;\\n}\\n\\n#todo-details .date-type{\\n    text-align: center;\\n}\\n\\n#todo-details .button-container{\\n    display: flex;\\n    justify-content: center;\\n    gap: 110px;\\n    position: relative\\n}\\n\\n#todo-details.done .done-toggle{\\n    background-color: green;\\n}\\n\\n#todo-details .button{\\n    width: 110px;\\n}\\n\\n#todo-details .save.button{\\n    color: white;\\n}\\n\\n#checklist {\\n    overflow: auto;\\n    height: 10rem;\\n}\\n\\n#checklist .checklist-item {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n#checklist input {\\n    box-sizing: border-box;\\n    width:100%;\\n    height: 40px;\\n    margin-right: -50px;\\n}\\n\\n#checklist .done input {\\n    text-decoration: line-through;\\n    background-color: var(--light-green);\\n}\\n\\n#checklist .item-button-container {\\n    display: flex;\\n    gap: 5px;\\n    user-select: none;\\n}\\n\\n#checklist .item-button {\\n    cursor: pointer;\\n    transition: 200ms ease-out;\\n}\\n\\n#todo-details #checklist .done-toggle {\\n    font-weight: 600;\\n    background-color: transparent;\\n    color: grey;\\n}\\n\\n#todo-details #checklist .done-toggle:hover {\\n    color: green;\\n}\\n\\n#todo-details #checklist .done .done-toggle {\\n    background-color: transparent;\\n    color: green;\\n}\\n\\n#todo-details #checklist .delete{\\n    color: crimson;\\n}\\n\\n#todo-details #checklist .delete:hover{\\n    color: brown;\\n}\\n\\n#new-app {\\n    color: cornflowerblue;\\n    width: 500px;\\n    font-size: 1.7rem;\\n    margin-top: -14px;\\n    font-style: italic;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","\nimport ProjectListController from './controller'\nimport './assets/style.css'\n\nconst App = new ProjectListController();\n"],"names":["module","exports","cssWithMappingToString","list","toString","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","id","_k","push","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","ChecklistItem","Todo","Project","ProjectList","PopulatorView","TodoView","NewAppView","instance","setListeners","context","parent","selector","event","callback","elements","querySelectorAll","el","addEventListener","bind","getID","itemContainerEl","composedPath","find","hasAttribute","parseInt","getAttribute","Controller","model","constructor","Error","localStorage","projectList","save","view","render","listeners","ListController","type","visible","update","status","removeClass","setClass","filter","child","ChecklistController","todo","itemID","inputValue","target","value","descr","console","log","addForm","focus","form","checklistElement","container","querySelector","tempDescr","edit","add","e","remove","TodoController","checklist","hide","projectController","currentTarget","click","input","modelProperty","name","close","clickOut","toggle","preventDefault","ProjectController","project","inputs","inputValues","element","title","itemDescr","startDate","endDate","editMode","tagName","newTitle","newDescr","newList","todoModel","renderedList","forEach","todoController","select","ProjectListController","selectDefault","previousProject","activetProject","visibleProjects","emptyView","titleInput","editForm","tempvalue","originalTitle","finishEdit","DataModel","storedData","parse","statusToClass","checklistTemplates","elementHTML","standard","htmlClass","getVisible","todoTemplates","projectTemplates","projectListTemplates","convertElement","tempWrapper","document","createElement","innerHTML","childElementCount","firstChild","viewTemplates","Checklist","templates","templateHTML","todoObj","slice","activeList","empty","projectObj","containers","getElementById","body","View","standardTemplate","addFormTemplate","editFormTemplate","getActive","childObj","standardElement","appendChild","elementToEdit","replaceWith","className","exclusive","children","elementID","classList","removeChild","emptyTemplate","App"],"sourceRoot":""}